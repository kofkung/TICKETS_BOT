import discord
from discord import app_commands
from discord.ui import Button, View, Modal, TextInput
import os
from dotenv import load_dotenv

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
load_dotenv()

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Intents
intents = discord.Intents.default()
intents.message_content = True
intents.members = True

client = discord.Client(intents=intents)
tree = app_commands.CommandTree(client)

# ‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏®‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
STAFF_ROLE_NAME = "ÔΩ•Ôæü‚úß‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏•‡∏π‡∏Å‡πÑ‡∏Å‡πà ‚òÜ"

class TicketModal(Modal, title='‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏á‡∏≤‡∏ô'):
    scale = TextInput(
        label='‡∏™‡πÄ‡∏Å‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£',
        placeholder='‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡πÄ‡∏Å‡∏•: 128 / 512 / 1024',
        required=True,
        max_length=100
    )
    
    reference = TextInput(
        label='Reference',
        placeholder='‡πÉ‡∏™‡πà reference ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
        required=True,
        style=discord.TextStyle.paragraph,
        max_length=500
    )
    
    image_url = TextInput(
        label='‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (URL)',
        placeholder='‡πÉ‡∏™‡πà URL ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û',
        required=False,
        max_length=500
    )
    
    convert_addon = TextInput(
        label='‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏≠‡∏î‡∏≠‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà',
        placeholder='‡∏ï‡∏≠‡∏ö: ‡πÉ‡∏ä‡πà / ‡πÑ‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°',
        required=True,
        max_length=100
    )

    async def on_submit(self, interaction: discord.Interaction):
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if not self.scale.value or not self.reference.value:
            await interaction.response.send_message('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á!', ephemeral=True)
            return

        await interaction.response.defer(ephemeral=True)
        
        guild = interaction.guild
        user = interaction.user
        
        # ‡∏´‡∏≤ Role ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
        staff_role = discord.utils.get(guild.roles, name=STAFF_ROLE_NAME)
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Category ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πã‡∏ß (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ)
        category = discord.utils.get(guild.categories, name='üé´ ‡∏ï‡∏±‡πã‡∏ß‡∏á‡∏≤‡∏ô')
        if not category:
            category = await guild.create_category('üé´ ‡∏ï‡∏±‡πã‡∏ß‡∏á‡∏≤‡∏ô')
        
        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Permissions ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πã‡∏ß
        overwrites = {
            guild.default_role: discord.PermissionOverwrite(read_messages=False),
            user: discord.PermissionOverwrite(read_messages=True, send_messages=True),
        }
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏° Permission ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Staff (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ Role)
        if staff_role:
            overwrites[staff_role] = discord.PermissionOverwrite(read_messages=True, send_messages=True)
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πã‡∏ß
        ticket_channel = await guild.create_text_channel(
            name=f'ticket-{user.name}',
            category=category,
            overwrites=overwrites
        )
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡πã‡∏ß
        embed = discord.Embed(
            title='üé´ ‡∏ï‡∏±‡πã‡∏ß‡πÉ‡∏´‡∏°‡πà',
            description=f'‡∏ï‡∏±‡πã‡∏ß‡∏Ç‡∏≠‡∏á {user.mention}',
            color=discord.Color.blue()
        )
        embed.add_field(name='üìè ‡∏™‡πÄ‡∏Å‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£', value=self.scale.value, inline=False)
        embed.add_field(name='üìù Reference', value=self.reference.value, inline=False)
        embed.add_field(name='üñºÔ∏è ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û', value=self.image_url.value if self.image_url.value else "‡πÑ‡∏°‡πà‡∏°‡∏µ", inline=False)
        embed.add_field(name='üîÑ ‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏≠‡∏î‡∏≠‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà', value=self.convert_addon.value, inline=False)
        embed.set_thumbnail(url=user.display_avatar.url)
        embed.set_footer(text=f'‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢: {user.name}', icon_url=user.display_avatar.url)
        
        # ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô)
        close_button = Button(label='‚úÖ ‡∏à‡∏ö‡∏á‡∏≤‡∏ô', style=discord.ButtonStyle.success)
        
        async def close_callback(button_interaction: discord.Interaction):
            staff_role = discord.utils.get(guild.roles, name=STAFF_ROLE_NAME)
            
            # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô
            if staff_role not in button_interaction.user.roles:
                await button_interaction.response.send_message(
                    '‚ùå ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î "‡∏à‡∏ö‡∏á‡∏≤‡∏ô" ‡πÑ‡∏î‡πâ!',
                    ephemeral=True
                )
                return
            
            await button_interaction.response.send_message(
                '‚úÖ ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á...',
                ephemeral=True
            )
            await ticket_channel.delete()
        
        close_button.callback = close_callback
        view = View(timeout=None)
        view.add_item(close_button)
        
        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πã‡∏ß
        await ticket_channel.send(embed=embed, view=view)
        
        # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        await interaction.followup.send(
            f'‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: {ticket_channel.mention}',
            ephemeral=True
        )

class TicketButton(View):
    def __init__(self):
        super().__init__(timeout=None)
    
    @discord.ui.button(label='üé´ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß', style=discord.ButtonStyle.primary, custom_id='open_ticket')
    async def open_ticket(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(TicketModal())

@tree.command(name='setup_ticket', description='‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏±‡πã‡∏ß (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Admin)')
@app_commands.default_permissions(administrator=True)
async def setup_ticket(interaction: discord.Interaction):
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    if interaction.channel.name != '‚ùÉü™¨ÔΩ•Àö‚Å∫‡∏™‡∏±‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤':
        await interaction.response.send_message(
            '‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á **‚ùÉü™¨ÔΩ•Àö‚Å∫‡∏™‡∏±‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤** ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!',
            ephemeral=True
        )
        return
    
    embed = discord.Embed(
        title='üé´ ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏á‡∏≤‡∏ô',
        description='‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        color=discord.Color.green()
    )
    embed.add_field(
        name='üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å:',
        value='‚Ä¢ ‡∏™‡πÄ‡∏Å‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (128 / 512 / 1024)\n‚Ä¢ Reference\n‚Ä¢ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (URL)\n‚Ä¢ ‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏≠‡∏î‡∏≠‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà',
        inline=False
    )
    
    await interaction.response.send_message(embed=embed, view=TicketButton())

@client.event
async def on_ready():
    await tree.sync()
    print(f'‚úÖ ‡∏ö‡∏≠‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: {client.user}')
    print(f'üì° ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: {len(client.guilds)} ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå')

# ‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó (‡∏≠‡πà‡∏≤‡∏ô Token ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env)
TOKEN = os.getenv('DISCORD_TOKEN')
if not TOKEN:
    raise ValueError("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö DISCORD_TOKEN ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env!")

client.run(TOKEN)