import threading
from flask import Flask
import discord
from discord import app_commands
from discord.ui import Button, View, Modal, TextInput
import os
from dotenv import load_dotenv

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
load_dotenv()

# ---------- Flask ----------
app = Flask(__name__)

@app.route('/')
def home():
    return "‚úÖ Discord Bot is running on Render"

def run_web():
    port = int(os.environ.get("PORT", 8080))
    app.run(host="0.0.0.0", port=port)

# ---------- Discord Bot Setup ----------
intents = discord.Intents.default()
intents.message_content = True
intents.members = True

client = discord.Client(intents=intents)
tree = app_commands.CommandTree(client)

# -------------------- CONFIG --------------------
STAFF_ROLE_NAME = "ÔΩ•Ôæü‚úß‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏•‡∏π‡∏Å‡πÑ‡∏Å‡πà ‚òÜ"
TICKET_CATEGORY = "üé´ ‡∏ï‡∏±‡πã‡∏ß‡∏á‡∏≤‡∏ô"
ORDER_CHANNEL_NAME = "‚ùÉü™¨ÔΩ•Àö‚Å∫‡∏™‡∏±‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
# ------------------------------------------------

class TicketModal(Modal, title='‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏á‡∏≤‡∏ô'):
    scale = TextInput(
        label='‡∏™‡πÄ‡∏Å‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£',
        placeholder='‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡πÄ‡∏Å‡∏•: 128 / 512 / 1024',
        required=True,
        max_length=100
    )
    reference = TextInput(
        label='Reference',
        placeholder='‡πÉ‡∏™‡πà reference ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
        required=True,
        style=discord.TextStyle.paragraph,
        max_length=500
    )
    image_url = TextInput(
        label='‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (URL)',
        placeholder='‡πÉ‡∏™‡πà URL ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û',
        required=False,
        max_length=500
    )
    convert_addon = TextInput(
        label='‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏≠‡∏î‡∏≠‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà',
        placeholder='‡∏ï‡∏≠‡∏ö: ‡πÉ‡∏ä‡πà / ‡πÑ‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°',
        required=True,
        max_length=100
    )

    async def on_submit(self, interaction: discord.Interaction):
        guild = interaction.guild
        user = interaction.user

        staff_role = discord.utils.get(guild.roles, name=STAFF_ROLE_NAME)
        category = discord.utils.get(guild.categories, name=TICKET_CATEGORY)
        if not category:
            category = await guild.create_category(TICKET_CATEGORY)

        overwrites = {
            guild.default_role: discord.PermissionOverwrite(read_messages=False),
            user: discord.PermissionOverwrite(read_messages=True, send_messages=True),
        }
        if staff_role:
            overwrites[staff_role] = discord.PermissionOverwrite(read_messages=True, send_messages=True)

        for ch in guild.text_channels:
            if ch.name == f'ticket-{user.name.lower()}':
                await interaction.response.send_message(f'‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß: {ch.mention}', ephemeral=True)
                return

        ticket_channel = await guild.create_text_channel(
            name=f'ticket-{user.name}',
            category=category,
            overwrites=overwrites
        )

        embed = discord.Embed(
            title='üé´ ‡∏ï‡∏±‡πã‡∏ß‡πÉ‡∏´‡∏°‡πà',
            description=f'‡∏ï‡∏±‡πã‡∏ß‡∏Ç‡∏≠‡∏á {user.mention}',
            color=discord.Color.blue()
        )
        embed.add_field(name='üìè ‡∏™‡πÄ‡∏Å‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£', value=self.scale.value, inline=False)
        embed.add_field(name='üìù Reference', value=self.reference.value, inline=False)
        embed.add_field(name='üñºÔ∏è ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û', value=self.image_url.value if self.image_url.value else "‡πÑ‡∏°‡πà‡∏°‡∏µ", inline=False)
        embed.add_field(name='üîÑ ‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏≠‡∏î‡∏≠‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà', value=self.convert_addon.value, inline=False)
        embed.set_thumbnail(url=user.display_avatar.url)
        embed.set_footer(text=f'‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢: {user.name}', icon_url=user.display_avatar.url)

        await ticket_channel.send(embed=embed)
        await interaction.response.send_message(f'‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: {ticket_channel.mention}', ephemeral=True)


class TicketButton(View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label='üé´ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß', style=discord.ButtonStyle.primary, custom_id='open_ticket')
    async def open_ticket(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(TicketModal())


@tree.command(name='setup_ticket', description='‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏±‡πã‡∏ß (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Admin)')
@app_commands.default_permissions(administrator=True)
async def setup_ticket(interaction: discord.Interaction):
    if interaction.channel.name != ORDER_CHANNEL_NAME:
        await interaction.response.send_message(
            f'‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á **{ORDER_CHANNEL_NAME}** ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!',
            ephemeral=True
        )
        return

    embed = discord.Embed(
        title='üé´ ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏á‡∏≤‡∏ô',
        description='‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        color=discord.Color.green()
    )
    embed.add_field(
        name='üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å:',
        value='‚Ä¢ ‡∏™‡πÄ‡∏Å‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (128 / 512 / 1024)\n‚Ä¢ Reference\n‚Ä¢ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (URL)\n‚Ä¢ ‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏≠‡∏î‡∏≠‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà',
        inline=False
    )

    await interaction.response.send_message(embed=embed, view=TicketButton())

# -------------------- END TICKET COMMAND --------------------

class EndTicketView(View):
    def __init__(self, channel):
        super().__init__(timeout=None)
        self.channel = channel

    @discord.ui.button(label='‚úÖ ‡∏à‡∏ö‡∏á‡∏≤‡∏ô', style=discord.ButtonStyle.success)
    async def close_ticket(self, interaction: discord.Interaction, button: discord.ui.Button):
        staff_role = discord.utils.get(interaction.guild.roles, name=STAFF_ROLE_NAME)
        if staff_role not in interaction.user.roles:
            await interaction.response.send_message('‚ùå ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÑ‡∏î‡πâ!', ephemeral=True)
            return

        await interaction.response.send_message('‚úÖ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ...', ephemeral=True)
        await self.channel.delete()

@tree.command(name="end_ticket", description="‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏ö‡∏á‡∏≤‡∏ô (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô)")
async def end_ticket(interaction: discord.Interaction):
    staff_role = discord.utils.get(interaction.guild.roles, name=STAFF_ROLE_NAME)
    if staff_role not in interaction.user.roles:
        await interaction.response.send_message("‚ùå ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ!", ephemeral=True)
        return

    if not interaction.channel.name.startswith("ticket-"):
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!", ephemeral=True)
        return

    embed = discord.Embed(
        title="üîö ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏á‡∏≤‡∏ô",
        description="‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠ **‡∏à‡∏ö‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ**",
        color=discord.Color.red()
    )
    await interaction.response.send_message(embed=embed, view=EndTicketView(interaction.channel))

# ------------------------------------------------------------

@client.event
async def on_ready():
    await tree.sync()
    print(f'‚úÖ ‡∏ö‡∏≠‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: {client.user}')
    print(f'üì° ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: {len(client.guilds)} ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå')

# ---------- Run ----------
if __name__ == '__main__':
    TOKEN = os.getenv('DISCORD_TOKEN')
    if not TOKEN:
        raise ValueError("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö DISCORD_TOKEN ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env!")
    
    # ‡∏£‡∏±‡∏ô Flask ‡πÉ‡∏ô Thread ‡πÅ‡∏¢‡∏Å
    threading.Thread(target=run_web, daemon=True).start()
    
    # ‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó Discord
    client.run(TOKEN)
